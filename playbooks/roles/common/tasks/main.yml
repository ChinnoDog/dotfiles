---

# TODO: Move partner repo to its own file because it doesn't have the repos below

- name: Enable extra Ubuntu repos
  shell: "apt-add-repository -y -n {{item}}"
  loop:
  - universe
  - multiverse
  - restricted
  changed_when: false

- name: Import helm key
  get_url:
    url: https://baltocdn.com/helm/signing.asc
    dest: /etc/apt/trusted.gpg.d/helm.asc
    
- name: Add helm repo
  apt_repository:
    repo: deb https://baltocdn.com/helm/stable/debian/ all main
    filename: helm-stable-debian
    update_cache: false

- name: Add Hashicorp gpg key
  get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /etc/apt/trusted.gpg.d/hashicorp.asc

- name: Add Hashicorp PPA
  apt_repository:
    repo: 'deb [arch=amd64] https://apt.releases.hashicorp.com {{ansible_distribution_release}} main'
    filename: hashicorp

- name: Add Github gpg key
  shell: >
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
    | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
  args:
    creates: /usr/share/keyrings/githubcli-archive-keyring.gpg

- name: Add github ppa
  shell: >
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
    | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/github-cli.list

#- name: Add Docker key
#  shell: >
#    curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
#    | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#  args:
#    creates: /etc/apt/keyrings/docker.gpg
#
#- name: Add Docker ppa
#  apt_repository:
#    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable"
#    filename: docker

- name: Add deadsnakes python ppa
  apt_repository:
    repo: ppa:deadsnakes/ppa
    filename: deadsnakes


- name: Add azure cli ppa
  shell: "curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash"
  args:
    creates: /usr/bin/az

- name: Install packages
  apt:
    install_recommends: true
    update_cache: true
    name:
    # prereq
    - apt-transport-https
    - python3-pip
    # used by ansible conf module
    - python3-psutil
    # cli
    - tree
    - atop
    - btrfs-compsize
    - build-essential
    - curl
    - vim
    - trezor
    - tmux
    - tmuxp
    - zstd
    - p7zip-full
    - vagrant
    - gh
    - powertop
    - colortest
    - ansible
    - ansible-lint
    - helm
    - azure-cli
    - apt-file
    - cifs-utils
    # docker packages
    #- docker-ce
    #- docker-ce-cli
    #- containerd.io
    #- docker-compose-plugin

- name: Install snaps
  snap:
    name:
    - multipass
    - canonical-livepatch
    - storage-explorer
    - docker

#- name: Docker group
#  group:
#    name: docker
#    system: true
#  register: result

- name: Install classic snaps
  snap:
    name: "{{item}}"
    classic: true
  loop:
  - powershell

- name: Make python3 default python
  alternatives:
    name: python
    link: /usr/bin/python
    path: /usr/bin/python3
    priority: 1

# This should be in a separate role/playbook because it is not a system config
- block:

  - name: git common settings
    git_config:
      scope: global
      name: "{{ (item|dict2items)[0].key }}"
      value: "{{ (item|dict2items)[0].value }}"
    loop:
    - user.name: Stephen Nichols
    - core.editor: vim
    - commit.gpgsign: "true"

  - name: Install pip modules
    pip:
      name: "{{item}}"
    loop:
    - jupyterlab
    # jupyterlab includes ipython but we should be explicit
    - ipython
    - 'xonsh[full]'

  # block params
  become: false
