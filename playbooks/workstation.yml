---
- name: Configure Ubuntu Laptop
  hosts: localhost
  connection: local
  become: true
  vars:
  roles:
  - role: common
  tasks:

  # Not yet available for impish
  # See: https://launchpad.net/~phoerious/+archive/ubuntu/keepassxc
  #- name: Add KeePassXC PPA
  #  apt_repository:
  #    repo: ppa:phoerious/keepassxc
  #    filename: keepassxc

  - name: Add Multisystem key
    get_url:
      url: http://liveusb.info/multisystem/depot/multisystem.asc
      dest: /etc/apt/trusted.gpg.d/multisystem.asc

  - name: Add multisystem PPA
    apt_repository:
      repo: deb http://liveusb.info/multisystem/depot all main
      filename: multisystem

  #- name: Add Dropbox key
  #  apt_key:
  #    keyserver: pool.sks-keyservers.net
  #    id: 1C61A2656FB57B7E4DE0F4C1FC918B335044912E

  #- name: Add Dropbox repository
  #  apt_repository:
  #    repo: deb https://linux.dropbox.com/ubuntu groovy main
  #    filename: dropbox-official

  - name: Add Chrome gpg key
    get_url:
      url: https://dl.google.com/linux/linux_signing_key.pub
      dest: /etc/apt/trusted.gpg.d/chrome.asc

  #- name: Add Chrome PPA
  #  apt_repository:
  #    repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
  #    filename: chrome

  - name: Add winehq gpg key
    get_url:
      url: https://dl.winehq.org/wine-builds/winehq.key
      dest: /etc/apt/trusted.gpg.d/winehq.asc

  # PPA for newest release not always available. 
  # Check this page: https://wiki.winehq.org/Ubuntu
  #- name: Add winehq ppa
  #  apt_repository:
  #    repo: "deb https://dl.winehq.org/wine-builds/ubuntu/ {{ansible_distribution_release}} main"
  #    filename: winehq

  - name: Add timeshift ppa
    apt_repository:
      repo: ppa:teejee2008/timeshift
      filename: timeshift

  #- name: Install Evernote
  #  apt:
  #    deb: https://cdn1.evernote.com/boron/linux/builds/Evernote-10.7.6-linux-ddl-ga-2321.deb

  #- name: Add ratbagd ppa
  #  apt_repository:
  #    repo: ppa:libratbag-piper/piper-libratbag-git
  #    filename: ratbagd

  - name: Add solaar ppa
    apt_repository:
      repo: ppa:solaar-unifying/stable
      filename: solaar

  - name: Add OBS ppa
    apt_repository:
      repo: ppa:obsproject/obs-studio
      filename: obs-studio

  - name: Install packages
    apt:
      install_recommends: true
      update_cache: true
      name:
      # prereq
      - lm-sensors
      - winehq-stable
      - mono-complete
      - flatpak
      - flatpak-builder
      # Needed for dropbox
      # - python3-gpg
      # cli
      - smartmontools
      - octave
      - winetricks
      - logiops
      # - ratbagd
      # gui
      - gimp
      - inkscape
      - multisystem
      - nautilus-dropbox
      - steam
      - gparted
      - google-chrome-stable
      - timeshift
      - virt-manager
      - virtualbox
      - torbrowser-launcher
      - firefox
      - xournal
      # obs requires v4l2loopback-dkms
      - v4l2loopback-dkms
      - obs-studio
      - ffmpeg
      # Display decorations
      - gnome-tweaks
      - solaar
      - gnome-shell-extensions
      - gnome-shell-extension-system-monitor

  - name: Remove snaps
    snap:
      name:
      - firefox
      state: absent

  - name: Install snaps
    snap:
      name:
      - spotify
      - acrordrdc
      - multipass
      - canonical-livepatch
      - storage-explorer
      # Must still run helper script to get keepassxc working with browser
      - keepassxc
      # mind mapping apps
      - xmind
      - freemind
      - freeplane-mindmapping

  - name: Install classic snaps
    snap:
      name: "{{item}}"
      classic: true
    loop:
    - powershell

  - name: Apply apparmor band-aid for Spotify
    shell: snap connect spotify:network-manager-observe :network-manager-observe
    changed_when: false

  - name: Remove flatpaks
    flatpak:
      name: "{{item}}"
      state: absent
    with_items:
      us.zoom.Zoom

  - name: Add flathub remote
    flatpak_remote:
      name: flathub
      flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

  - name: Install flatpaks
    flatpak:
      name: "{{item}}"
    with_items:
    #- com.axosoft.GitKraken
    - com.calibre_ebook.calibre
    - com.jetbrains.PyCharm-Community
    - net.ankiweb.Anki
    - net.sourceforge.ExtremeTuxRacer
    - org.kde.digikam
    - com.axosoft.GitKraken 
    - com.slack.Slack
    - com.discordapp.Discord
    - org.kde.okular
    - net.cozic.joplin_desktop
    #- com.obsproject.Studio
    #- com.spotify.Client

  - name: Grant flatpak permissions to home dir
    # This command is idempotent and always returns 0
    shell: "flatpak override {{item}} --filesystem=home"
    changed_when: false
    loop:
    - net.ankiweb.Anki
    - com.discordapp.Discord
    - com.slack.Slack

  #- name: Install Shadow.tech
  #  get_url:
  #    url: https://update.shadow.tech/launcher/prod/linux/ubuntu_18.04/Shadow.AppImage
  #    dest: /opt/Shadow.AppImage
  #    mode: 0755
  
  - name: Remove shadow.tech
    file:
      path: /opt/Shadow.AppImage
      state: absent

  - name: Install Trezor app
    get_url:
      url: https://trezor.io/content/binaries/trezor-suite/Trezor-Suite-22.11.1-linux-x86_64.AppImage
      dest: /opt/Trezor-Suite.AppImage
      mode: 0755

  - name: Install WebEx
    apt:
      deb: https://binaries.webex.com/WebexDesktop-Ubuntu-Official-Package/Webex.deb

  - name: Install Windscribe VPN
    apt:
      deb: https://deploy-do.windscribe.com/apps/windscribe_2.3.15_beta_amd64.deb

  - name: Install Zoom public key
    get_url:
      url: https://zoom.us/linux/download/pubkey
      dest: /etc/apt/trusted.gpg.d/zoom.asc

  - name: Install zoom
    apt:
      deb: https://cdn.zoom.us/prod/5.9.1.1380/zoom_amd64.deb

  - name: Increase inotify limit for dropbox
    lineinfile:
      path: /etc/sysctl.conf
      line: fs.inotify.max_user_watches=300000
      regexp: '^fs.inotify.max_user_watches='

  #- name: Enable livepatch
  #  shell: canonical-livepatch enable 

  - name: Enable automatic apt upgrades
    copy:
      dest: /etc/apt/apt.conf.d/22auto-upgrades-local
      content: |
        // Custom -SRN
        
        // Enable update script
        APT::Periodic::Enable "1";
        
        // "apt-get update" every day
        APT::Periodic::Update-Package-Lists "1";
        
        // Don't download before we need them
        APT::Periodic::Download-Upgradeable-Packages "0";
        
        // Run "unattended-upgrade" every day
        APT::Periodic::Unattended-Upgrade "1";
        
        // Delete usleess packages every day
        APT::Periodic::AutocleanInterval "1";

  - name: Apply automatic upgrade seettings
    copy:
      dest: /etc/apt/apt.conf.d/52unattended-upgrades-local
      content: |
        // Custom -SRN
        // Docs: zless /usr/share/doc/unattended-upgrades/README.md.gz
        
        Unattended-Upgrade::Origins-Pattern {
          "origin=*";
        };
        Unattended-Upgrade::Remove-Unused-Dependencies "true";
        Unattended-Upgrade::OnlyOnACPower "true";
        Unattended-Upgrade::Skip-Updates-On-Metered-Connections "true";

  # Flatpak automatic update from https://www.jwillikers.com/automate-flatpak-updates-with-systemd
  - name: Systemd service to update system flatpaks
    copy:
      dest: /etc/systemd/system/update-system-flatpaks.service
      content: |
        [Unit]
        Description=Update system Flatpaks
        After=network-online.target
        Wants=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/flatpak --system update -y

        [Install]
        WantedBy=multi-user.target

  - name: Systemd timers to update flatpaks
    copy:
      dest: "/etc/systemd/system/update-system-flatpaks.timer"
      content: |
        [Unit]
        Description=Update system Flatpaks daily

        [Timer]
        OnCalendar=daily
        Persistent=true

        [Install]
        WantedBy=timers.target

  - name: Enable systemd timer to update flatpaks
    systemd:
      state: started
      enabled: true
      name: "update-system-flatpaks.timer"
      daemon_reload: yes

- name: Configure user profile
  hosts: localhost
  connection: local
  become: false
  pre_tasks:

  - name: Get current shell extensions
    shell: gnome-extensions list
    register: result
    changed_when: false

  - name: Enable gnome shell extensions
    shell: "gnome-extensions enable {{item}}"
    when: item not in result.stdout_lines
    loop:
    - system-monitor@paradoxxx.zero.gmail.com 

  - name: Configure Gnome shell folders
    lineinfile:
      line: "{{ item }}"
      regexp: "^{{ item.split('=')[0] }}=.*$"
      path: "{{ ansible_env.HOME }}/.config/user-dirs.dirs"
    loop:
    - 'XDG_TEMPLATES_DIR="$HOME/Dropbox/Templates"'
    - 'XDG_DOCUMENTS_DIR="$HOME/Dropbox/Documents"'
    - 'XDG_MUSIC_DIR="$HOME/Dropbox/Music"'
    - 'XDG_PICTURES_DIR="$HOME/Dropbox/Pictures"'
    - 'XDG_VIDEOS_DIR="$HOME/Dropbox/Videos"'
    register: result

  - name: Activate Gnome shell folders
    shell: xdg-user-dirs-update
    when: result.changed

  # This will probably delete the shell folders even if they have contents!
  - name: Delete unused shell folder directories
    file:
      path: "{{ ansible_env.HOME }}/{{ item }}"
      state: absent
      recurse: false
    loop:
      - Templates
      - Documents
      - Music
      - Pictures
      - Videos

  - name: Make calendar notifications only appear in tray
    dconf:
      key: /org/gnome/evolution-data-server/calendar/notify-with-tray
      value: "true"

  - name: Read existing Atom configuration
    slurp:
      src: ~chinnodog/.atom/config.cson
    register: atomconf
    failed_when: false

  roles:

  - role: gantsign.atom
    users:
    - username: chinnodog
      atom_packages:
      - linter
      - linter-ansible-linting
      - atom-beautify
      - file-icons
      - markdown-preview-enhanced
      - vim-mode-plus
      atom_config:
        '*':
          autosave:
            enabled: true
          core:
            telemetryConsent: limited
          "exception-reporting":
            userId: 32e40e40-b46c-441e-bde8-953de595332a
            disabledPackages:
            - markdown-preview
          editor:
            showIndentGuide: true
            showInvisibles: true
      atom_config_overwrite: true

  post_tasks:

  - name: Cron DnD off in the morning
    cron:
      name: Turn off Do Not Disturb
      hour: "08"
      minute: "00"
      job: gsettings set org.gnome.desktop.notifications show-banners true

  - name: Cron DnD on at night
    cron:
      name: Turn on Do Not Disturb
      hour: "23"
      minute: "30"
      job: gsettings set org.gnome.desktop.notifications show-banners false

